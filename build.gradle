buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'


version = '1.3.2b'


group = 'com.zeml.rotp_zhp' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'RotP-Hermit Purple'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {

    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')


    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=rotp_zhp.mixin.json"


            mods {
                RotP_HP {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=rotp_zhp.mixin.json"

            mods {
                RotP_HP {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'RotP_HP', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                RotP_HP {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name "RotP Maven"
        url 'https://raw.githubusercontent.com/StandoByte/RotP-maven/main'
    }
    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }
    repositories {
        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
    }
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.0'
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'
    implementation fg.deobf("standobyte.jojo:JJBA-RipplesOfThePast:${main_mod_version}")
    implementation fg.deobf("dev.kosmx.player-anim:player-animation-lib-forge:${playeranim_version}")
    implementation fg.deobf("io.github.kosmx.bendy-lib:bendy-lib-forge:${bendylib_version}")
    implementation fg.deobf("curse.maven:epic-fight-mod-405076:4867904")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    testAnnotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

}

mixin{
    add sourceSets.main, "rotp_zhp.mixins-refmap.json"

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "RotP_HermitoPurple",
                "Specification-Vendor": "RotP_HPZeml",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "1.2.8",
                "Implementation-Vendor" :"RotP_HPZeml",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": 0,
                "MixinConfigs" : "rotp_zhp.mixin.json"
        ])
    }
    rename 'mixin.refman.json','rotp_zhp.mixins-refmap.json'

}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}